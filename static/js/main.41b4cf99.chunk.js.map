{"version":3,"sources":["LearningModule.jsx","PracticeModule.jsx","Module.jsx","ModulePicker.jsx","Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["LearningModule","info","className","map","i","index","type","text","width","height","src","link","title","frameBorder","allowFullScreen","items","i2","index2","numbers","PracticeModule","questions","correctCallback","useState","Array","length","keys","unanswered","setUnanswered","undefined","correct","setCorrect","setIndex","answer","reset","Math","floor","random","pickQuestion","onClick","console","log","content","question","options","option","newUnanswered","splice","help","Module","mode","module","nextCallback","ref","href","url","ModulePicker","modules","setModule","next","mod","hidden","Home","setMode","refs","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41b4cf99.chunk.js","sourcesContent":["export default function LearningModule({info}) {\n    return (\n        <div className=\"info\">\n            {info.map((i, index) => {\n                if (i.type === \"text\") return <p className=\"text\" key={index}>{i.text}</p>\n                if (i.type === \"video/youtube\") return (\n                    <iframe className=\"video\" key={index} width=\"560\" height=\"315\" src={i.link} title=\"YouTube video player\" frameBorder=\"0\" allowFullScreen></iframe>\n                )\n                if(i.type === \"text/list\") return (\n                    <ul className=\"list\" key={index}>\n                        {i.items.map((i2, index2) => \n                            <li key={index2}>\n                                {i2}\n                            </li>\n                        )}\n                    </ul>\n                )\n                return undefined\n            })}\n        </div>\n    )\n}","import { useState } from \"react\";\n\nconst numbers = [\"one\", \"two\", \"three\", \"four\", \"five\"]\n\nexport default function PracticeModule({questions, correctCallback}) {\n\n    const [unanswered, setUnanswered] = useState([...Array(questions.length).keys()])\n    const [correct, setCorrect] = useState(undefined)\n    const [index, setIndex] = useState(0)\n\n    function answer(index, answer) {\n        const question = questions[unanswered[index]]\n        const correct = question.answer === answer\n        setCorrect(correct)\n    }\n    function next() {\n        const newUnanswered = [...unanswered]\n        newUnanswered.splice(index, 1)\n        setUnanswered(newUnanswered)\n        reset(newUnanswered)\n    }\n    function reset(unanswered) {\n        setCorrect(undefined)\n        setIndex(pickQuestion(unanswered))\n    }\n    function pickQuestion(unanswered) {\n        if (unanswered.length === 0) return undefined\n        else return Math.floor(Math.random() * unanswered.length)\n    }\n\n    if (unanswered.length === 0) {\n        return (\n            <div>\n                <p>{`Congratulations! You have answered all questions of this module correctly!`}</p>\n                <button onClick={correctCallback}>Next</button>\n            </div>\n        )\n    }\n\n    console.log(index)\n\n    const question = questions[unanswered[index]]\n\n    let content\n    if (correct === undefined) {\n        if (typeof question.answer === \"boolean\") {\n            content = (\n                <div>\n                    <div>\n                        <button className=\"yes\" onClick={() => answer(index, true)}>Yes</button>\n                        <button className=\"no\" onClick={() => answer(index, false)}>No</button>\n                    </div>\n                </div>\n            )\n        } else {\n            content = (\n                <div className={`multiple-choice ${numbers[question.options.length - 1]}`}>\n                    {question.options.map((option, i) => {\n                        return (\n                            <button key={i} onClick={() => answer(index, i)}>{option}</button>\n                        )\n                    })}\n                </div>\n            )\n        }\n        \n    } else if (correct) {\n        content = (\n            <div>\n                <p>That is correct!</p>\n                <button onClick={next}>Next</button>\n            </div>\n        )\n    } else {\n        content = (\n            <div>\n                <p>\n                    That is incorrect.\n                </p>\n                <p className=\"help\"> \n                    {question.help}\n                </p>\n                <button onClick={() => reset(unanswered)}>\n                    Retry\n                </button>\n            </div>\n        )\n    }\n    \n    \n    return (\n        <div className=\"practice\">\n            <h3>\n                {question.question}\n            </h3>\n            {content}\n        </div>\n    )\n}","import LearningModule from \"./LearningModule\"\nimport PracticeModule from \"./PracticeModule\"\n\nexport default function Module({mode, module, nextCallback}) {\n\n    let content\n    if (mode === \"learn\") {\n        content = (\n            <LearningModule info={module.info} nextCallback={nextCallback}/>\n        )\n    } else {\n        content = (\n            <PracticeModule key={module.title} questions={module.questions} correctCallback={nextCallback}/>\n        )\n    }\n\n    return (\n        <div className=\"module\">\n            <h2 className=\"title\">\n                {module.title}\n            </h2>\n            {content}\n            {module.ref ? (\n                <div className=\"module-references\">\n                    <h3>References</h3>\n                    {module.ref.map((ref, i) => {\n                        return (\n                            <div className=\"ref\" key={i}>\n                                <p>{ref.text}</p>\n                                <a href={ref.url}>{ref.url}</a>\n                            </div>\n                        )\n                    })}\n                </div>\n            ) : undefined}\n        </div>\n    )\n}","import { useState } from \"react\"\nimport Module from \"./Module\"\n\n\nexport default function ModulePicker({mode, modules}) {\n\n    const [module, setModule] = useState(undefined)\n\n    function next() {\n        if (module === modules.length - 1) setModule(0)\n        else setModule(module + 1)\n    }\n\n    function prev() {\n        if (module === 0) setModule(modules.length - 1)\n        else setModule(module - 1)\n    }\n\n    let content\n    if (module === undefined) {\n        content = (\n            <ul className=\"module list\">\n                {modules.map((mod, index) => {\n                    return (\n                        <li key={index}>\n                            <button onClick={() => setModule(index)}>\n                                {mod.title}\n                            </button>\n                        </li>\n                    )\n                })}\n            </ul>\n        )\n    } else {\n        content = (\n            <Module mode={mode} module={modules[module]} nextCallback={next}/>\n        )\n    }\n\n    return (\n        <div className=\"picker\">\n            <div className=\"selector\" hidden={module === undefined}>\n                <button onClick={prev}>\n                    Previous\n                </button>\n\n                <button onClick={() => setModule(undefined)}>\n                    Select\n                </button>\n\n                <button onClick={next}>\n                    Next\n                </button>\n            </div>\n            {content}\n        </div>\n    )\n}","import { useState } from \"react\"\nimport ModulePicker from \"./ModulePicker\"\nimport refs from \"./references.json\"\n\nexport default function Home({modules}) {\n    const [mode, setMode] = useState(undefined)\n\n    let content\n    if (mode === undefined) {\n        content = (\n            <div>\n                <button onClick={() => setMode(\"ref\")}>\n                    References\n                </button>\n                <div>\n                    <button onClick={() => setMode(\"learn\")}>\n                        Learn\n                    </button>\n                    <button onClick={() => setMode(\"practice\")}>\n                        Practice\n                    </button>\n                </div>\n            </div>\n        )\n    } else if (mode === \"ref\") {\n        content = (\n            <div>\n                {refs.map((ref, i) => {\n                    return (\n                        <div className=\"ref\" key={i}>\n                            <p>{ref.text}</p>\n                            <a href={ref.url}>{ref.url}</a>\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    } else {\n        content = (\n            <div>\n                <ModulePicker mode={mode} modules={modules}/>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"home\">\n            <h1>\n                Active Listening\n            </h1>\n            <button className=\"home button\" hidden={mode === undefined} onClick={() => setMode(undefined)}>\n                Home\n            </button>\n            {content}\n        </div>\n    )\n}","import './App.css';\nimport modules from './modules.json'\nimport Home from './Home';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Home modules={modules}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}